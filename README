# Waveform Generator Script

## Overview
This Python script generates a waveform consisting of two pulses per cycle based on user-defined parameters. The waveform is saved to a CSV file, which can be used for further analysis or processing. The generated waveform is represented in terms of time and amplitude, and each pulse's timing and height can be customized.

## Requirements
- Python 3.x
- NumPy
- Pandas

You can install the required Python packages by running:

```bash
pip install numpy pandas
```

## Usage
To run the script, simply execute it in your terminal or command prompt:

```bash
python waveform_generator.py
```

The script will prompt you for the following inputs:
1. **Pulse frequency (in Hz)**: This is the frequency at which the pulses repeat.
2. **First pulse height (in V)**: The amplitude of the first pulse.
3. **Second pulse height (in V)**: The amplitude of the second pulse.
4. **Time difference between two pulses (in μs)**: The delay between the end of the first pulse and the start of the second pulse.
5. **First pulse width (default 100 ns)**: The duration of the first pulse in nanoseconds. Press Enter to use the default value.
6. **Second pulse width (default 1 μs)**: The duration of the second pulse in nanoseconds. Press Enter to use the default value.

The script will then generate the waveform data and save it to a CSV file. The filename will include the parameters used for easy identification.

## Output
The script generates a CSV file that contains the waveform data. The CSV file consists of:
- **Header Information**: Metadata such as data length, frequency, amplitude, offset, and phase.
- **Waveform Data**: The CSV contains two columns:
  - `xpos`: The sample index.
  - `value`: The amplitude of the waveform at each point.

The filename is generated based on the provided parameters, making it easy to identify different waveforms.

### Example CSV Header
```
data length,1000000
frequency,1000.000000
amp,3.0
offset,0.9
phase,0.000000
```

### Example CSV Data
```
xpos,value
0,0.9
1,0.9
2,3.9
...
```

## Customization
You can modify the script to adjust the default values for pulse widths or change the sampling rate for higher or lower resolution. The sample rate is defined by the variable `sample_rate` in the `generate_waveform` function.

## License
This project is open-source and available for modification or personal use.

## Contact
If you encounter issues or have questions about the script, feel free to reach out.

